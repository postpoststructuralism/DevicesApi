// <auto-generated />
using DevicesApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevicesApi.Migrations
{
    [DbContext(typeof(DeviceContext))]
    [Migration("20210927064413_AddTemperature")]
    partial class AddTemperature
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevicesApi.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Temperature")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceStatusId");

                    b.HasIndex("DeviceTypeId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceStatusId = 1,
                            DeviceTypeId = 1,
                            Name = "Device 1",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 2,
                            DeviceStatusId = 2,
                            DeviceTypeId = 3,
                            Name = "Device 2",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 3,
                            DeviceStatusId = 1,
                            DeviceTypeId = 3,
                            Name = "Device 3",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 4,
                            DeviceStatusId = 2,
                            DeviceTypeId = 1,
                            Name = "Device 4",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 5,
                            DeviceStatusId = 1,
                            DeviceTypeId = 2,
                            Name = "Device 5",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 6,
                            DeviceStatusId = 1,
                            DeviceTypeId = 3,
                            Name = "Device 6",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 7,
                            DeviceStatusId = 2,
                            DeviceTypeId = 2,
                            Name = "Device 7",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 8,
                            DeviceStatusId = 2,
                            DeviceTypeId = 2,
                            Name = "Device 8",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 9,
                            DeviceStatusId = 1,
                            DeviceTypeId = 1,
                            Name = "Device 9",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 10,
                            DeviceStatusId = 2,
                            DeviceTypeId = 3,
                            Name = "Device 10",
                            Temperature = 0
                        },
                        new
                        {
                            Id = 11,
                            DeviceStatusId = 2,
                            DeviceTypeId = 2,
                            Name = "Device 11",
                            Temperature = 0
                        });
                });

            modelBuilder.Entity("DevicesApi.Models.DeviceRelation", b =>
                {
                    b.Property<int>("RootDeviceId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedDeviceId")
                        .HasColumnType("int");

                    b.HasKey("RootDeviceId", "RelatedDeviceId");

                    b.HasIndex("RelatedDeviceId");

                    b.ToTable("DeviceRelations");

                    b.HasData(
                        new
                        {
                            RootDeviceId = 6,
                            RelatedDeviceId = 1
                        },
                        new
                        {
                            RootDeviceId = 6,
                            RelatedDeviceId = 4
                        },
                        new
                        {
                            RootDeviceId = 6,
                            RelatedDeviceId = 7
                        },
                        new
                        {
                            RootDeviceId = 4,
                            RelatedDeviceId = 2
                        });
                });

            modelBuilder.Entity("DevicesApi.Models.DeviceStatusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceStatusTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Offline"
                        });
                });

            modelBuilder.Entity("DevicesApi.Models.DeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Desktop"
                        });
                });

            modelBuilder.Entity("DevicesApi.Models.Device", b =>
                {
                    b.HasOne("DevicesApi.Models.DeviceStatusType", "DeviceStatus")
                        .WithMany()
                        .HasForeignKey("DeviceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevicesApi.Models.DeviceType", "DeviceType")
                        .WithMany()
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceStatus");

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("DevicesApi.Models.DeviceRelation", b =>
                {
                    b.HasOne("DevicesApi.Models.Device", "RelatedDevice")
                        .WithMany()
                        .HasForeignKey("RelatedDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevicesApi.Models.Device", "RootDevice")
                        .WithMany("RelatedDevices")
                        .HasForeignKey("RootDeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RelatedDevice");

                    b.Navigation("RootDevice");
                });

            modelBuilder.Entity("DevicesApi.Models.Device", b =>
                {
                    b.Navigation("RelatedDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
